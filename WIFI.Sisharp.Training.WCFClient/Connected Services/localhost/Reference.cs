//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WIFI.Sisharp.Training.WCFClient.localhost {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/wifi.sisharp.training.wcf")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxNumber {
            get {
                return this.MaxNumberField;
            }
            set {
                if ((this.MaxNumberField.Equals(value) != true)) {
                    this.MaxNumberField = value;
                    this.RaisePropertyChanged("MaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberCount {
            get {
                return this.NumberCountField;
            }
            set {
                if ((this.NumberCountField.Equals(value) != true)) {
                    this.NumberCountField = value;
                    this.RaisePropertyChanged("NumberCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/wifi.sisharp.training.wcf")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="localhost.IMathService")]
    public interface IMathService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/Calc", ReplyAction="http://tempuri.org/IMathService/CalcResponse")]
        int Calc(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/Calc", ReplyAction="http://tempuri.org/IMathService/CalcResponse")]
        System.Threading.Tasks.Task<int> CalcAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/GetCountries", ReplyAction="http://tempuri.org/IMathService/GetCountriesResponse")]
        WIFI.Sisharp.Training.WCFClient.localhost.Country[] GetCountries(string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/GetCountries", ReplyAction="http://tempuri.org/IMathService/GetCountriesResponse")]
        System.Threading.Tasks.Task<WIFI.Sisharp.Training.WCFClient.localhost.Country[]> GetCountriesAsync(string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMathService/GetDataUsingDataContractResponse")]
        WIFI.Sisharp.Training.WCFClient.localhost.CompositeType GetDataUsingDataContract(WIFI.Sisharp.Training.WCFClient.localhost.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMathService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WIFI.Sisharp.Training.WCFClient.localhost.CompositeType> GetDataUsingDataContractAsync(WIFI.Sisharp.Training.WCFClient.localhost.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMathServiceChannel : WIFI.Sisharp.Training.WCFClient.localhost.IMathService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MathServiceClient : System.ServiceModel.ClientBase<WIFI.Sisharp.Training.WCFClient.localhost.IMathService>, WIFI.Sisharp.Training.WCFClient.localhost.IMathService {
        
        public MathServiceClient() {
        }
        
        public MathServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MathServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Calc(int a, int b) {
            return base.Channel.Calc(a, b);
        }
        
        public System.Threading.Tasks.Task<int> CalcAsync(int a, int b) {
            return base.Channel.CalcAsync(a, b);
        }
        
        public WIFI.Sisharp.Training.WCFClient.localhost.Country[] GetCountries(string language) {
            return base.Channel.GetCountries(language);
        }
        
        public System.Threading.Tasks.Task<WIFI.Sisharp.Training.WCFClient.localhost.Country[]> GetCountriesAsync(string language) {
            return base.Channel.GetCountriesAsync(language);
        }
        
        public WIFI.Sisharp.Training.WCFClient.localhost.CompositeType GetDataUsingDataContract(WIFI.Sisharp.Training.WCFClient.localhost.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WIFI.Sisharp.Training.WCFClient.localhost.CompositeType> GetDataUsingDataContractAsync(WIFI.Sisharp.Training.WCFClient.localhost.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
